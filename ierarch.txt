
Процедура КнопкаСформироватьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ДействияФормыДействиеСформировать(Кнопка)
	ТаблПериоды = Новый ТаблицаЗначений;
	ТаблПериоды.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	ДатаН = ДатаНач;
	Пока ДатаН <= ДатаКон Цикл
		НоваяСтрока = ТаблПериоды.Добавить();
		НоваяСтрока.Период = ДатаН;
		ДатаН = КонецМесяца(ДатаН) + 1;
	КонецЦикла;
	
	ТаблПериоды.Сортировать("Период Возр");
	
	ЗапросЗатр = Новый Запрос;
	ЗапросЗатр.Текст = "ВЫБРАТЬ
	                   |	ТаблПериод.Период
	                   |ПОМЕСТИТЬ ВТ_Периоды
	                   |ИЗ
	                   |	&ТаблПериод КАК ТаблПериод
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ
	                   |	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Контрагент,
	                   |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	                   |	ХозрасчетныйОборотыДтКт.Период КАК Период
	                   |ПОМЕСТИТЬ ВТ_Затраты
	                   |ИЗ
	                   |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Месяц, СчетДт В (&СчетДт621, &СчетДт62041), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                   |	ВТ_Периоды.Период,
	                   |	ВТ_Затраты.Контрагент
	                   |ПОМЕСТИТЬ ВТ_ПериодыОбъекты
	                   |ИЗ
	                   |	ВТ_Периоды КАК ВТ_Периоды,
	                   |	ВТ_Затраты КАК ВТ_Затраты
	                   |;
	                   |
	                   |////////////////////////////////////////////////////////////////////////////////
	                   |ВЫБРАТЬ
	                   |	ВТ_ПериодыОбъекты.Период КАК Период,
	                   |	ВТ_ПериодыОбъекты.Контрагент КАК Контрагент,
	                   |	ВТ_ПериодыОбъекты.Контрагент.Родитель КАК Родитель,
	                   |	ЕСТЬNULL(ВТ_Затраты.СуммаОборот, 0) КАК СуммаОборот
	                   |ИЗ
	                   |	ВТ_ПериодыОбъекты КАК ВТ_ПериодыОбъекты
	                   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Затраты КАК ВТ_Затраты
	                   |		ПО ВТ_ПериодыОбъекты.Период = ВТ_Затраты.Период
	                   |			И ВТ_ПериодыОбъекты.Контрагент = ВТ_Затраты.Контрагент";
	
	
	ЗапросЗатр.Текст = "ВЫБРАТЬ
	                   |	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Контрагент,
	                   |	ХозрасчетныйОборотыДтКт.СубконтоДт1.Родитель КАК Родитель,
	                   |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	                   |	ХозрасчетныйОборотыДтКт.Период КАК Период
	                   |ИЗ
	                   |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Месяц, СчетДт В (&СчетДт621, &СчетДт62041), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	
	ЗапросЗатр.УстановитьПараметр("ТаблПериод", ТаблПериоды);
	ЗапросЗатр.УстановитьПараметр("ДатаНач", ДатаНач);
	ЗапросЗатр.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	ЗапросЗатр.УстановитьПараметр("Организация", Организация);
	ЗапросЗатр.УстановитьПараметр("СчетДт621", ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	ЗапросЗатр.УстановитьПараметр("СчетДт62041", ПланыСчетов.Хозрасчетный.РасчСПокупПоРаботамОсновныеРасч);
	
    ТаблЗатрат = ЗапросЗатр.Выполнить().Выгрузить();
	
	// таблица уровней групп
	ЗапросСпр = Новый Запрос;
	ЗапросСпр.Текст = "ВЫБРАТЬ
	                  |	Контрагенты.Ссылка КАК ТекГруппа,
	                  |	Контрагенты.Родитель КАК ТекГруппаРодитель
					  //|	ВЫБОР
					  //|		КОГДА Контрагенты.Родитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
					  //|			ТОГДА 0
					  //|		ИНАЧЕ -1
					  //|	КОНЕЦ КАК Уровень
					  //| - 1 КАК Уровень
	                  |ИЗ
	                  |	Справочник.Контрагенты КАК Контрагенты
	                  |ГДЕ
	                  |	Контрагенты.ЭтоГруппа
	                  |	И Контрагенты.Ссылка В(&ТаблГрупп)";
	ЗапросСпр.УстановитьПараметр("ТаблГрупп", ТаблЗатрат.ВыгрузитьКолонку("Родитель"));
	
	ТаблицаСправочника = ЗапросСпр.Выполнить().Выгрузить();
	ТаблицаСправочникаДоп = ТаблицаСправочника.СкопироватьКолонки();
	
	// заполним таблицу всеми возможными родителями
	Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
		//Если СтрокаТЗ.Уровень <> 0 Тогда
		Если ЗначениеЗаполнено(СтрокаТЗ.ТекГруппа.Родитель) Тогда
			
			ТекГруппа = СтрокаТЗ.ТекГруппа.Родитель;
			Пока ЗначениеЗаполнено(ТекГруппа.Родитель) Цикл
				НоваяСтрока = ТаблицаСправочникаДоп.Добавить();
				НоваяСтрока.ТекГруппа = ТекГруппа;
				НоваяСтрока.ТекГруппаРодитель = ТекГруппа.Родитель;
				//НоваяСтрока.Уровень = -1;
				
				ТекГруппа = ТекГруппа.Родитель;
			КонецЦикла;
			
			
			//ТекУровень = 0;
			//ТекГруппа = СтрокаТЗ.ТекГруппа;
			//Пока ЗначениеЗаполнено(ТекГруппа.Родитель) Цикл
			//	ТекУровень = ТекУровень + 1;
			//	ТекГруппа = ТекГруппа.Родитель;
			//КонецЦикла;
			//СтрокаТЗ.Уровень = ТекУровень;
		КонецЕсли;
		
	КонецЦикла;
	
	// соберем все в одну таблицу
	Для Каждого СтрокаТЗ Из ТаблицаСправочникаДоп Цикл
		НоваяСтрока = ТаблицаСправочника.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
	ТаблицаСправочникаДоп.Очистить();
	
	// соберем в доп таблицу значения групп для верхнего уровня
	Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
		Если ЗначениеЗаполнено(СтрокаТЗ.ТекГруппаРодитель) И (Не ЗначениеЗаполнено(СтрокаТЗ.ТекГруппаРодитель.Родитель)) Тогда
			НоваяСтрока = ТаблицаСправочникаДоп.Добавить();
			НоваяСтрока.ТекГруппа = СтрокаТЗ.ТекГруппаРодитель;
			//НоваяСтрока.ТекГруппаРодитель = ТекГруппа.Родитель;
			//НоваяСтрока.Уровень = -1;
		КонецЕсли;
	КонецЦикла;
	
	// соберем все в одну таблицу
	Для Каждого СтрокаТЗ Из ТаблицаСправочникаДоп Цикл
		НоваяСтрока = ТаблицаСправочника.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
	КонецЦикла;
	
	
	// уберем дубликаты
	ТаблицаСправочника.Свернуть("ТекГруппа,ТекГруппаРодитель", "");
	
	//// расставим уровни
	//Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
	//	ТекУровень = 0;
	//	ТекГруппа = СтрокаТЗ.ТекГруппа;
	//	Пока ЗначениеЗаполнено(ТекГруппа.Родитель) Цикл
	//		ТекУровень = ТекУровень + 1;
	//		ТекГруппа = ТекГруппа.Родитель;
	//	КонецЦикла;
	//	СтрокаТЗ.Уровень = ТекУровень;
	//	
	//КонецЦикла;
	
	// вывод групп по уровням
	//Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
	//	Если Не ЗначениеЗаполнено(СтрокаТЗ.ТекГруппаРодитель) Тогда
	//	//Если СтрокаТЗ.Уровень = 0 Тогда
	//	
	//		Сообщить(" 0 " + СтрокаТЗ.ТекГруппа.Наименование);

	//		ВыводГруппы(ТаблицаСправочника, СтрокаТЗ);
	//	КонецЕсли;
	//КонецЦикла;
	
	//////////////////////////////////
	//ТаблЗатрат.Колонки.Добавить("ВерхнРодитель");
	
	// содержит значения по вышележащим группам
	ДопТабл = ТаблЗатрат.СкопироватьКолонки();
	ДопТабл.Колонки.Добавить("ГруппаИерархия");
	
	
	//ЗапросЗатр.Текст = "ВЫБРАТЬ
	//                   |	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Контрагент,
	//                   |	ХозрасчетныйОборотыДтКт.СубконтоДт1.Родитель КАК Родитель,
	//                   |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	//                   |	ХозрасчетныйОборотыДтКт.Период КАК Период
	//                   |ИЗ
	//                   |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Месяц, СчетДт В (&СчетДт621, &СчетДт62041), , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	
	Для Каждого СтрокаТЗ Из ТаблЗатрат Цикл
		ТекКонтраг = СтрокаТЗ.Контрагент;
		//Пока ЗначениеЗаполнено(ТекКонтраг.Родитель) Цикл
		Пока Истина Цикл
			НоваяСтрока = ДопТабл.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЗ);
			НоваяСтрока.ГруппаИерархия = ТекКонтраг.Родитель;
			
			ТекКонтраг = ТекКонтраг.Родитель;
			Если Не ЗначениеЗаполнено(ТекКонтраг) Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Макет = ПолучитьМакет("Макет");
	
	ШапкаКонтрагент = Макет.ПолучитьОбласть("СтрокаШапка|СтолбКонтрагент");
	ШапкаПериод = Макет.ПолучитьОбласть("СтрокаШапка|СтолбПериод");
	
	ГруппаКонтрагент = Макет.ПолучитьОбласть("СтрокаГруппа|СтолбКонтрагент");
	ГруппаПериод = Макет.ПолучитьОбласть("СтрокаГруппа|СтолбПериод");
	
	ДанныеКонтрагент = Макет.ПолучитьОбласть("СтрокаКонтрагент|СтолбКонтрагент");
	ДанныеПериод = Макет.ПолучитьОбласть("СтрокаКонтрагент|СтолбПериод");
	
	ТаблДок = ЭлементыФормы.ПолеТД;
	ТаблДок.Очистить();
	
	
	// вывод заголовка
	ТаблДок.Вывести(ШапкаКонтрагент);
	Для Каждого СтрокаТЗ Из ТаблПериоды Цикл
		ШапкаПериод.Параметры.Период = Формат(СтрокаТЗ.Период, "ДФ='MMMM yyyy'");
		ТаблДок.Присоединить(ШапкаПериод);
	КонецЦикла;
	
	
	// вывод тех кто на верхнем уровне
	ТаблКонтраг = Новый ТаблицаЗначений;
	ТаблКонтраг.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	
	Для Каждого СтрокаТЗ Из ТаблЗатрат Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЗ.Родитель) Тогда
			
			НоваяСтрока = ТаблКонтраг.Добавить();
			НоваяСтрока.Контрагент = СтрокаТЗ.Контрагент;
			
		КонецЕсли;
	КонецЦикла;
	
	ТаблКонтраг.Свернуть("Контрагент");
	
	// тут ищем данные по контрагентам и периодам
	Отбор = Новый Структура;
	Для Каждого СтрокаКонтраг Из ТаблКонтраг Цикл
		
		ДанныеКонтрагент.Параметры.Контрагент = СтрокаКонтраг.Контрагент;
		//ТаблДок.Вывести(ДанныеКонтрагент, УровеньГруппы);
		ТаблДок.Вывести(ДанныеКонтрагент);
		
		Для Каждого СтрокаПериод Из ТаблПериоды Цикл
			Отбор.Очистить();
			//Отбор.Вставить("Родитель", СтрокаТЗ.ТекГруппа);
			Отбор.Вставить("Контрагент", СтрокаКонтраг.Контрагент);
			Отбор.Вставить("Период", СтрокаПериод.Период);
			
			НайденныеСтрокиКонтрагента = ТаблЗатрат.НайтиСтроки(Отбор);
			Если НайденныеСтрокиКонтрагента.Количество() = 0 Тогда
				ДанныеПериод.Параметры.СуммаЗатр = "";
			Иначе
				ДанныеПериод.Параметры.СуммаЗатр = Формат(НайденныеСтрокиКонтрагента[0].СуммаОборот, "ЧДЦ=2; ЧРД=.; ЧГ=");
			КонецЕсли;
			
			//ТаблДок.Присоединить(ДанныеПериод, УровеньГруппы);
			ТаблДок.Присоединить(ДанныеПериод);
			
		КонецЦикла;
	КонецЦикла;
	
	
	
	ТаблДок.НачатьАвтогруппировкуСтрок();	
	
	// вывод групп
	// вывод групп по уровням
	Отбор = Новый Структура;
	НачальныйУровень = 0;
	Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЗ.ТекГруппаРодитель) Тогда
			
			ВыводГруппы(ТаблицаСправочника, СтрокаТЗ, ТаблЗатрат, ДопТабл, ТаблПериоды, ТаблДок, ГруппаКонтрагент, ГруппаПериод, ДанныеКонтрагент, ДанныеПериод, НачальныйУровень);
			
		КонецЕсли;
	КонецЦикла;
	
	ТаблДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

Процедура ВыводГруппы(ТаблицаСправочника, СтрокаТЗ, ТаблЗатрат, ДопТабл, ТаблПериоды, ТаблДок, ГруппаКонтрагент, ГруппаПериод, ДанныеКонтрагент, ДанныеПериод, УровеньГруппировки)
	
	УровеньГруппы = УровеньГруппировки;
	
	
	// ГРУППА
	ГруппаКонтрагент.Параметры.Группа = СтрокаТЗ.ТекГруппа;
	ТаблДок.Вывести(ГруппаКонтрагент, УровеньГруппы);
	
	Отбор = Новый Структура;
	Для Каждого СтрокаПериод Из ТаблПериоды Цикл
		Отбор.Очистить();
		Отбор.Вставить("Период", СтрокаПериод.Период);
		Отбор.Вставить("ГруппаИерархия", СтрокаТЗ.ТекГруппа);
		
		ИтогЗаПериодПоГруппе = 0;
		НайденныеСтроки = ДопТабл.НайтиСтроки(Отбор);
		Для ППП = 1 По НайденныеСтроки.Количество() Цикл
			ИтогЗаПериодПоГруппе = ИтогЗаПериодПоГруппе + НайденныеСтроки[ППП - 1].СуммаОборот;
		КонецЦикла;
		
		ГруппаПериод.Параметры.СуммаЗатр = Формат(ИтогЗаПериодПоГруппе, "ЧДЦ=2; ЧРД=.; ЧГ=");
		ТаблДок.Присоединить(ГруппаПериод, УровеньГруппы);
		
	КонецЦикла;
	
	
	
	// ДЕТАЛЬНЫЕ ДАННЫЕ ГРУППЫ - по таблице затрат
	Отбор.Очистить();
	// родитель
	Отбор.Вставить("Родитель", СтрокаТЗ.ТекГруппа);
	НайденныеСтрокиГруппы = ТаблЗатрат.НайтиСтроки(Отбор);
	// тут все строки с контрагентами и периодами с определенным родителем
	// Получим всех контрагентов
	ТаблКонтраг = Новый ТаблицаЗначений;
	ТаблКонтраг.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Для ППП = 1 По НайденныеСтрокиГруппы.Количество() Цикл
		НоваяСтрока = ТаблКонтраг.Добавить();
		НоваяСтрока.Контрагент = НайденныеСтрокиГруппы[ППП - 1].Контрагент;
	КонецЦикла;
	// убираем дубли
	ТаблКонтраг.Свернуть("Контрагент");
	
	
	Если ТаблКонтраг.Количество() > 0 Тогда
		УровеньГруппы = УровеньГруппы + 1;
	КонецЕсли;
	
	// тут ищем данные по контрагентам и периодам
	Для Каждого СтрокаКонтраг Из ТаблКонтраг Цикл
		
		ДанныеКонтрагент.Параметры.Контрагент = СтрокаКонтраг.Контрагент;
		ТаблДок.Вывести(ДанныеКонтрагент, УровеньГруппы);
		
		Для Каждого СтрокаПериод Из ТаблПериоды Цикл
			Отбор.Очистить();
			Отбор.Вставить("Родитель", СтрокаТЗ.ТекГруппа);
			Отбор.Вставить("Контрагент", СтрокаКонтраг.Контрагент);
			Отбор.Вставить("Период", СтрокаПериод.Период);
			
			НайденныеСтрокиКонтрагента = ТаблЗатрат.НайтиСтроки(Отбор);
			Если НайденныеСтрокиКонтрагента.Количество() = 0 Тогда
				ДанныеПериод.Параметры.СуммаЗатр = "";
			Иначе
				ДанныеПериод.Параметры.СуммаЗатр = Формат(НайденныеСтрокиКонтрагента[0].СуммаОборот, "ЧДЦ=2; ЧРД=.; ЧГ=");
			КонецЕсли;
			
			ТаблДок.Присоединить(ДанныеПериод, УровеньГруппы);
			
		КонецЦикла;
	КонецЦикла;
	
	
	
	Отбор.Очистить();
	Отбор.Вставить("ТекГруппаРодитель", СтрокаТЗ.ТекГруппа);
	НайденныеСтроки = ТаблицаСправочника.НайтиСтроки(Отбор);
	Для ППП = 1 По НайденныеСтроки.Количество() Цикл
		ВыводГруппы(ТаблицаСправочника, НайденныеСтроки[ППП - 1], ТаблЗатрат, ДопТабл, ТаблПериоды, ТаблДок, ГруппаКонтрагент, ГруппаПериод, ДанныеКонтрагент, ДанныеПериод, УровеньГруппы + 1)	
	КонецЦикла;
	
КонецПроцедуры


//Процедура ВыводГруппы(ТаблицаСправочника, СтрокаГруппыРодителя, ТаблПериоды, ДопТабл, ТаблДок, ГруппаПериод, ГруппаКонтрагент)
//	//Сообщить(Строка(СтрокаГруппы.Уровень) + " " + СтрокаГруппы.ТекГруппа.Наименование);
//	
//	//Если Не ЗначениеЗаполнено(СтрокаГруппы.ТекГруппаРодитель) Тогда
//	//Если СтрокаТЗ.Уровень = 0 Тогда
////		Сообщить(" + " + СтрокаГруппыРодителя.ТекГруппа.Наименование);
//	//КонецЕсли;
//	Отбор = Новый Структура;
//	Для Каждого СтрокаТЗ Из ТаблицаСправочника Цикл
//		Если СтрокаТЗ.ТекГруппаРодитель = СтрокаГруппыРодителя.ТекГруппа Тогда
//			//Сообщить(" + " + СтрокаТЗ.ТекГруппа.Наименование);
//			Сообщить(" " + Строка(СтрокаТЗ.Уровень) + " " + СтрокаТЗ.ТекГруппа.Наименование);
//			
//			
//		    // вывод группы
//			ГруппаКонтрагент.Параметры.Группа = СтрокаТЗ.ТекГруппа;
//			ТаблДок.Вывести(ГруппаКонтрагент, СтрокаТЗ.Уровень);
//			
//			// вывод периодов
//			
//			Для Каждого СтрокаПериод Из ТаблПериоды Цикл
//				Отбор.Очистить();
//				Отбор.Вставить("Период", СтрокаПериод.Период);
//				Отбор.Вставить("ГруппаИерархия", СтрокаТЗ.ТекГруппа);
//				
//				ИтогЗаПериодПоГруппе = 0;
//				НайденныеСтроки = ДопТабл.НайтиСтроки(Отбор);
//				Для ППП = 1 По НайденныеСтроки.Количество() Цикл
//					ИтогЗаПериодПоГруппе = ИтогЗаПериодПоГруппе + НайденныеСтроки[ППП - 1].СуммаОборот;
//				КонецЦикла;
//				
//				ГруппаПериод.Параметры.СуммаЗатр = Формат(ИтогЗаПериодПоГруппе, "ЧДЦ=2; ЧРД=.; ЧГ=");
//				ТаблДок.Присоединить(ГруппаПериод, СтрокаТЗ.Уровень);
//			КонецЦикла;
//			
//			
//			ВыводГруппы(ТаблицаСправочника, СтрокаТЗ, ТаблПериоды, ДопТабл, ТаблДок, ГруппаПериод, ГруппаКонтрагент)
//			//ВыводГруппы(ТаблицаСправочника, СтрокаТЗ)
//		КонецЕсли;
//	КонецЦикла;
//	
//КонецПроцедуры

Процедура ПриОткрытии()
	ДатаНач = Дата(2014, 10, 10);
	ДатаКон = Дата(2014, 12, 25);
	Организация = Справочники.Организации.НайтиПоНаименованию("ИП Столбов И.М.");
КонецПроцедуры
